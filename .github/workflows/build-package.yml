name: build-package
on:
  push:
    paths:
    - '.github/workflows/build-package.yml'
    - 'build.sh'
    - 'laf'
jobs:
  build-auto:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        build_type: [RelWithDebInfo, Debug]
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: Install Dependencies
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y \
          libpixman-1-dev libfreetype6-dev libharfbuzz-dev zlib1g-dev \
          libx11-dev libxcursor-dev libxi-dev libgl1-mesa-dev libfontconfig1-dev
    - uses: aseprite/get-ninja@main
    - uses: ilammy/msvc-dev-cmd@v1
      if: runner.os == 'Windows'
    - name: Building
      shell: bash
      run: |
        bash build.sh --auto --norun
    - name: Running CLI Tests
      shell: bash
      run: |
        if [[ "${{ runner.os }}" == "Linux" ]] ; then
          export XVFB=xvfb-run
        fi
        export ASEPRITE=$PWD/build/bin/aseprite
        cd tests
        $XVFB bash run-tests.sh
    # 新增打包步骤
    - name: Package Artifacts
      if: matrix.build_type == 'RelWithDebInfo'  # 仅打包发布版本
      shell: bash
      run: |
        BUILD_DIR="$PWD/build"
        ARTIFACT_NAME="aseprite-${{ runner.os }}-${{ matrix.build_type }}"
        
        case "${{ runner.os }}" in
          Windows)
            7z a "$ARTIFACT_NAME.zip" "$BUILD_DIR/bin/*"
            echo "ASSET_NAME=$ARTIFACT_NAME.zip" >> $GITHUB_ENV
            ;;
          macOS)
            tar czf "$ARTIFACT_NAME.tar.gz" -C "$BUILD_DIR/bin" .
            echo "ASSET_NAME=$ARTIFACT_NAME.tar.gz" >> $GITHUB_ENV
            ;;
          Linux)
            tar czf "$ARTIFACT_NAME.tar.gz" -C "$BUILD_DIR/bin" .
            echo "ASSET_NAME=$ARTIFACT_NAME.tar.gz" >> $GITHUB_ENV
            ;;
        esac
    # 新增上传工件步骤
    - name: Upload Build Artifacts
      if: matrix.build_type == 'RelWithDebInfo'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.ASSET_NAME }}
        path: ${{ env.ASSET_NAME }}

  # 新增发布草稿版本作业
  create-release:
    name: Create Draft Release
    runs-on: ubuntu-latest
    needs: build-auto  # 依赖所有构建作业
    if: github.ref == 'refs/heads/main'  # 仅在主分支触发
    steps:
    - name: Download All Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    - name: Create Draft Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: auto-build-${{ github.run_id }}
        name: "Autobuild #${{ github.run_number }} (${{ github.sha }})"
        body: |
          Automated build from CI
          - Commit: ${{ github.sha }}
          - Build ID: ${{ github.run_id }}
        draft: true
        prerelease: false
        files: artifacts/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
